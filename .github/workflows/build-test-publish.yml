name: Build/Test/Publish

# Controls when the action will run.
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: powershell

jobs:
  build-test-publish:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          # 3.1.x incorrectly handles references to executables so Geisha.Cli.IntegrationTests fail. 3.1.x is required becase Geisha is not yet migrated to .NET 5 (https://github.com/dawidkomorowski/geisha/issues/265).
          # Use multiple versions as a workaround for https://github.com/dotnet/sdk/issues/1675.
          dotnet-version: |
            3.1.x
            5.0.x

      - name: Clear NuGet cache (workaround for https://github.com/actions/setup-dotnet/issues/155)
        run: dotnet nuget locals all --clear

      - name: Build solution
        run: dotnet build Geisha.sln --configuration Debug

      - name: Install Scream virtual audio device
        run: |
          Start-Service audio*
          Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.6/Scream3.6.zip -OutFile C:\Scream3.6.zip
          Extract-7Zip -Path C:\Scream3.6.zip -DestinationPath C:\Scream
          $cert = (Get-AuthenticodeSignature C:\Scream\Install\driver\Scream.sys).SignerCertificate
          $store = [System.Security.Cryptography.X509Certificates.X509Store]::new("TrustedPublisher", "LocalMachine")
          $store.Open("ReadWrite")
          $store.Add($cert)
          $store.Close()
          cd C:\Scream\Install\driver
          C:\Scream\Install\helpers\devcon install Scream.inf *Scream
          Get-CimInstance Win32_SoundDevice | fl * # Print audio device info.

      - name: Execute tests
        run: dotnet test Geisha.sln --configuration Debug

      - name: Publish NuGet packages
        run: |
          $projectVersion = Get-Content -Path "project.version" -Raw
          $versionToSet = "$projectVersion+$env:GITHUB_RUN_NUMBER"
          $fileVersionToSet = "$projectVersion.$env:GITHUB_RUN_NUMBER"
          dotnet publish Geisha.sln --configuration Release -p:Version=$versionToSet -p:FileVersion=$fileVersionToSet

      - name: Upload NuGet packages as artifacts
        uses: actions/upload-artifact@v2.2.2
        with:
          name: nuget-packages
          path: src\**\bin\Release\*.nupkg

  benchmark-preformance:
    runs-on: windows-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          # 3.1.x incorrectly handles references to executables so Geisha.Cli.IntegrationTests fail. 3.1.x is required becase Geisha is not yet migrated to .NET 5 (https://github.com/dawidkomorowski/geisha/issues/265).
          # Use multiple versions as a workaround for https://github.com/dotnet/sdk/issues/1675.
          dotnet-version: |
            3.1.x
            5.0.x

      - name: Clear NuGet cache (workaround for https://github.com/actions/setup-dotnet/issues/155)
        run: dotnet nuget locals all --clear

      - name: Build solution
        run: dotnet build Geisha.sln --configuration Release

      - name: Execute performance benchmarks
        run: .\benchmark\Benchmark\bin\Release\netcoreapp3.1\Benchmark.exe | Out-Default

      - name: Publish benchmark results
        run: .\scripts\publish-benchmark-results.ps1